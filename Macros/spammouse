#!/bin/sh
# Syntax: spammouse [button id]
#   Example: spammouse 1    (spams mouse button 1 until script is killed)
#
# Intended use: This script was originally meant to be used for macro keys, for instance on gaming keyboards, such keyboards often have software that allows you to bind scripts to the macro keys, use cases would include:
#       Running script on key press and killing it/re-running it on key release (spams key until the trigger key is released)
#       Running script on key press and killing it/re running it again the next time the key is pressed (spams key until trigger key is pressed a second time)
#
# Alternative uses:
#       Use a software to bind a key combination to trigger the script (such as sxhkd or xbindkeys) to create the desired behavior in above examples.
#           For instance, you can use a key combination to toggle on and off an sxhkd configuration which would make mouse button 1 trigger this script to spam itself until it is pressed again or until it is released.



declare -r btn=$1       # 1=left, 2=mid, 3=right, 4=wheel-up, 5=wheel-down; the order of keys may vary by mouse, use xev to determine which button is which.

# Kill if already running
scriptname=`basename "$0"`
if [[ "`pidof -x $scriptname -o %PPID`" ]]; then
    pkill $scriptname
    exit
fi

# Check if declared button is an integer, if it is, spam the key, if it is not, crash script.
while [ "$btn" -eq "$btn" ]; do
    xdotool click $btn
done;
